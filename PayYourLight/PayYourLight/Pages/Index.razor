@page "/"
@using PayYourLight.Data
@using System.Threading;
@implements IDisposable
@inject ICompteur IComp


<form>
    <div class="row">

        <div class="col-md-4">

            <input style="width: 100%;" for="Name" class="form-control" @bind="@Comp.NumberCompteur" placeholder="CMP- ...Votre numero de Compteur" required />
            <hr />
            <a href="/acheter/@Comp.NumberCompteur" class="btn btn-primary">Acheter</a>
        </div>
    </div>
    <div class="row" style="padding:50px 0px 0px 0px;">

        <div class="col-md-6" style="padding: 50px 0px 0px 0px;">
            <p>

            </p>
            <RadzenCard>
                <RadzenTemplateForm Data=@("LoginWithRegisterAndReset")>
                    <RadzenLogin Login=@(args => OnLogin(args, "Login with register and password reset"))
                                 ResetPassword=@(args => OnResetPassword(args, "Login with register and password reset"))
                                 Register=@(args => OnRegister("Login with register and password reset")) Style="margin-bottom: 20px;" />
                </RadzenTemplateForm>
            </RadzenCard>
        </div>
    </div>
    <div class="col-md-6">

            <RadzenRadialGauge Style="width: 100%; height: 500px;">
                <RadzenRadialGaugeScale Step="1" Min="0" Max="12" StartAngle="0" EndAngle="360" ShowFirstTick="false"
                                        MinorStep=@minorStep
                                        TickLength="20"
                                        MinorTickLength="10"
                                        TickLabelOffset="40"
                                        TickPosition="GaugeTickPosition.Inside">
                    <RadzenRadialGaugeScalePointer Value=@hours Length="0.6" ShowValue="false" />
                    <RadzenRadialGaugeScalePointer Value=@seconds Length="0.9" Fill="red" Width="2" ShowValue="false" />
                    <RadzenRadialGaugeScalePointer Value=@minutes Length="0.8" ShowValue="false" />
                </RadzenRadialGaugeScale>
            </RadzenRadialGauge>
        </div>

</form>

<Carrouselt/>
@code{

    Timer timer;
    double hours;
    double minutes;
    double seconds;

    double minorStep = 12 / 60.0;

    double move = 338;
    double exercise = 2;
    double stand = 8;

    protected override void OnInitialized()
    {
        timer = new Timer(state =>
        {
            var now = DateTime.Now;

            hours = now.Hour % 12 + now.Minute / 60.0;

            minutes = now.Minute * minorStep + now.Second * 12 / 3600.0;
            seconds = now.Second * minorStep;

            InvokeAsync(StateHasChanged);
        }, null, 0, 1000);
    }

    public void Dispose()
    {
        timer.Dispose();
    }

    string userName = "admin";
    string password = "admin";
    string console;

    void OnLogin(LoginArgs args, string name)
    {
        console = ($"{name} -> Username: {args.Username} and password: {args.Password}");
    }

    void OnRegister(string name)
    {
        console = ($"{name} -> Register");
    }

    void OnResetPassword(string value, string name)
    {
        console = ($"{name} -> ResetPassword for user: {value}");
    }


    [Parameter]
    public int id { get; set; }
    ClsCompteurs Comp = new ClsCompteurs();
    IEnumerable<ClsCompteurs> type;
    protected override async Task OnInitializedAsync()
    {
        type = await IComp.GetCompteur();
    }
  

}


