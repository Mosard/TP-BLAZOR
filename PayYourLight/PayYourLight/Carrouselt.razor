@*@using System.Threading 

<div class="d-flex flex-column border-primary alert alert-info col-5">
    <div class="d-flex justify-content-between align-items-center" style="height: 400px;">
        <img src="img1.jpg" />
        <div>
            @Render(currentPosition)
        </div>
        <img src="img1.jpg" />
    </div>

</div>
@code {
    [Parameter]
    public Type[] Components { get; set; }
    int currentPosition;
    CancellationTokenSource  cts;
    CancellationToken ct;
    protected override async Task OnInitializedAsync()
    {
        cts = new CancellationTokenSource();
        ct = cts.Token;
        Walkththrough();

        //base.OnInitialized();
    }
    public async Task Walkththrough()
    {
        while (!ct.IsCancellationRequested)
        {
            await Task.Delay(2500, ct);
            currentPosition++;
            await InvokeAsync(() => this.StateHasChanged());
        }
    }
    public RenderFragment Render(int position)
    {
        return RenderIrreBuilder =>
        {
           // RenderIrreBuilder.OpenComponent(0, Components[Math.Abs(position % Components.Length)]);
            RenderIrreBuilder.CloseComponent();
        };
    }
}*@
